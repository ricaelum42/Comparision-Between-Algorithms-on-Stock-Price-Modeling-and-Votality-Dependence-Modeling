% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsDecom.R
\name{tsDecom}
\alias{tsDecom}
\title{Fit time series model via decomposition}
\usage{
tsDecom(s, start = NULL, end = NULL, frequency = 365, alpha = 0.05,
  trendSmooth = c("Natural", "KNN", "lm"), seed = 2018440,
  resHandle = c("ARGaussian", "ARt", "RS"), bound = c(-3, 3),
  optimCheck = FALSE, HardMargin = FALSE)
}
\arguments{
\item{s}{a stock dataset, should be a vector}

\item{start}{the time of the first observation. See \link{ts}}

\item{end}{the time of the last observation. See \link{ts}}

\item{frequency}{the number of observations per unit of time. See \link{ts}}

\item{alpha}{critical value of \link{runs.test}}

\item{trendSmooth}{smoothing method to trend. Currently the method should be one of these three \code{natural spline}, \code{KNN} and \code{lm}}

\item{seed}{the random seed}

\item{resHandle}{method to residuals. Currently the method should be one of these three \code{AR(1)}, \code{AR(1)} with \code{t} distribution and \code{Regime switching model AR(1)}}

\item{bound}{Give the bound of the residuals generation. If \code{NULL}, the residuals would be generated without restriction.}

\item{optimCheck}{If \code{TRUE}, the optim value would be checked. See \link{optimCheck}}

\item{HardMargin}{If \code{TRUE}, the prediction of residuals would be ignored.}
}
\value{
An object of the class \code{tsDecom} with following components:
\describe{
  \item{stress}{measurement of fit. The smaller the better}
  \item{pred}{prediction of the model. pred = pred_trend + pred_season + pred_res}
  \item{pred_season}{prediction of season}
  \item{pred_trend}{prediction of trend}
  \item{pred_res}{prediction of residuals}
  \item{s}{the original time series}
  \item{times}{the time of the time series}
}
}
\description{
a different process of time series prediction: decompose the time series into three pieces,
seasonality, trend and random residuals; build a model to each of them and forecast; unit all three pieces.
}
\examples{
tsD <- tsDecom(co2, start = c(1959, 1), frequency = 12)
plot(tsD$s, col = "red", type = "l", ylim = extendrange(c(tsD$s, tsD$pred)))
Xorder <- order(tsD$times)
lines(tsD$times[Xorder], tsD$pred[Xorder])

}
